version: '3.9'
networks:
  ghosts-network:
    driver: bridge
services:
    threat-hunting-game:
      build:
        context: ..
        target: non-vpn
      image: threat-hunting-game:non-vpn
      container_name: threat-hunting-game-vpn
      ports:
        - '5433:5433'
      networks:
        - ghosts-network
      restart: always

    postgres:
      image: postgres
      container_name: ghosts-postgres
      environment:
        POSTGRES_DB: ghosts
        POSTGRES_USER: ghosts
        POSTGRES_PASSWORD: scotty@1
      volumes:
        - ../Containers/Environment_Data/db_data:/var/lib/postgresql/data
        - ../Containers/Environment_Data/spectre_data:/tmp
      logging:
        options:
          max-size: '100m'
          max-file: '5'
      ports:
        - '5432:5432'
      healthcheck:
        test: [ 'CMD-SHELL', 'pg_isready -U ghosts' ]
        interval: 10s
        timeout: 5s
        retries: 10
      networks:
        - ghosts-network
      restart: always

    ghosts-api:
      image: dustinupdyke/ghosts
      container_name: ghosts-api
      depends_on:
        - postgres
      ports:
        - '8080:5000'
      networks:
        - ghosts-network
      restart: always

    grafana:
      image: grafana/grafana
      container_name: ghosts-grafana
      user: root
      depends_on:
        - postgres
      ports:
        - '3000:3000'
      networks:
        - ghosts-network
      restart: always
      volumes:
        - ../Containers/Environment_Data/g_data:/var/lib/grafana
        - ../Containers/Environment_Data/datasources:/etc/grafana/provisioning/datasources
        - ../Containers/Environment_Data/dashboards:/etc/grafana/provisioning/dashboards

    ghosts-spectre:
      build:
        context: ../Containers/GHOSTS-SPECTRE/src
        target: "non-vpn"
      container_name: ghosts-spectre
      ports:
        - '5002:8080'
      networks:
        - ghosts-network
      restart: always
      volumes:
        - ../Containers/Environment_Data/spectre_data:/app/config
    mongo:
      image: mongo
      container_name: ghosts-mongo
      ports:
        - '32770:27017'
      networks:
        - ghosts-network
      restart: always
      volumes:
        - ../Containers/Environment_Data/mongo_data:/data/db
    ghosts-animator:
      image: dustinupdyke/ghosts-animator:0.5.0
      container_name: ghosts-animator
      ports:
        - '5003:5000'
      networks:
        - ghosts-network
      restart: always
